@model HeaderBannerComponent

<div class="container-fluid p-0 header-banner">
    <div class="header-banner-image-background d-flex justify-content-center align-items-end" style="background-image:url('@Model.ImageSrc');">
        @if (Model.SubTitle != null)
        {
            <div class="container mb-n5">
                <div class="row">
                    <div class="d-flex align-items-center justify-content-center col-lg-12">
                        <h1 class="text-white bg-black px-3 pt-2 pb-1 d-inline-block position-relative" data-mdb-toggle="animation" data-mdb-animation-start="onLoad" data-mdb-animation-on-scroll="once" data-mdb-animation="fade-in" data-mdb-animation-delay="1000" data-mdb-animation-duration="900">
                            <span class="tilted text-white px-3 py-2">@Html.Raw(Model.SubTitle)</span>
                            @Html.Raw(Model.Title)
                        </h1>
                    </div>
                </div>
            </div>
        }
    </div>

    @if (Model.Body != null)
    {
        <div class="container-fluid position-relative overflow-hidden">
            <div class="container position-relative pt-4">
                <div class="row d-flex justify-content-center align-items-center" data-mdb-toggle="animation" data-mdb-animation-start="onLoad" data-mdb-animation-on-scroll="once" data-mdb-animation="fade-in" data-mdb-animation-delay="1200" data-mdb-animation-duration="1200">
                    @if (Model.Body != null)
                    {
                        <div class="col-lg-6 text-center py-5">
                            @Html.Raw(Model.Body)
                        </div>
                    }

                    @if (Model.OvalContainers != null)
                    {
                        @Html.DisplayFor(x => x.OvalContainers)
                    }
                </div>
            </div>
        </div>
    }
</div>