@page "/hostel-booking/{hostelName}/{checkInDate?}/{checkOutDate?}/{userId?}"
@model FuseHostelsAndTravel.Web.Pages.HostelBooking.IndexModel

@{
    ViewData["Title"] = Model.HostelName + " - Book";

    <section id="headerBanner">
        @Html.DisplayFor(x => x.HeaderBanner)
        <input type="hidden" asp-for="@Model.UserId" />
        <input type="hidden" asp-for="@Model.HostelId" />
    </section>

    <section id="bookingSection">
        <div class="container">
            <div class="row pt-8 pb-5">
                <iframe class="w-100" id="booking-iframe" src="@Model.IframeUrl" scrolling="no"></iframe>
            </div>
        </div>
    </section>
}


@section Scripts {
    <script type="text/javascript">
        $(window).on('load', function () {
            var userSignedIn = '@User.Identity.IsAuthenticated';
            userSignedIn = userSignedIn.toLowerCase()

            if (userSignedIn == 'false') {
                window.setTimeout(function () {
                    $('.book-now-login-titles').show();

                    const myModalEl = document.getElementById('logInModal');
                    const modal = new mdb.Modal(myModalEl);
                    modal.show();
                }, 1500);
            }
        });

        let bookingInserted = false;
        var postHostelBooking = function (hostelReservation) {
            if (hostelReservation.HostelId != null && !bookingInserted) {
                //Rollbar.info("Hostel Booking Request Parsed Data", hostelReservation);
                //Rollbar.info("Hostel Booking Request Parsed Data String", JSON.stringify(hostelReservation));

                //$.ajax({
                //    type: "POST",
                //    url: "Index?handler=CreateHostelBooking",
                //    contentType: "application/json; charset=utf-8",
                //    headers: {
                //        RequestVerificationToken:
                //            $('input:hidden[name="__RequestVerificationToken"]').val()
                //    },
                //    dataType: "json",
                //    data: JSON.stringify(hostelReservation),
                //    success: function (result) {
                //        bookingInserted = true;

                //        if (result != "fail") {
                //            Rollbar.info("Hostel Booking Inserted Successfully", result);
                //        }
                //        else {
                //            Rollbar.info("Hostel Booking Failed");
                //        }
                //    }
                //});
            }
        }

        function HostelReservationRoom(roomName, amount, nights, checkInDate, checkOutDate, guestFirstName, guestLastName, cloudbedsGuestId) {
            this.Id = null;
            this.HostelReservationId = null;
            this.RoomName = roomName;
            this.Amount = parseValueToDecimal(amount);
            this.Nights = parseValueToInt(nights);
            this.CheckInDate = new Date(checkInDate);
            this.CheckOutDate = new Date(checkOutDate);
            this.GuestFirstName = guestFirstName;
            this.GuestLastName = guestLastName;
            this.CloudbedsGuestId = cloudbedsGuestId;
        }

        function HostelReservation(checkInDate, checkOutDate, amount, currencyCode, cloudbedsReservationId, cloudbedsPropertyId, rooms, hostelId, userId) {
            this.Id = null;
            this.CheckInDate = new Date(checkInDate);
            this.CheckOutDate = new Date(checkOutDate);
            this.Amount = amount;
            this.CurrencyCode = currencyCode;
            this.CloudbedsReservationId = parseValue(cloudbedsReservationId);
            this.CloudbedsPropertyId = parseValueToInt(cloudbedsPropertyId);
            this.RoomQuantity = rooms.length;
            this.Rooms = rooms;
            this.HostelId = parseValueToInt(hostelId);
            this.UserId = parseValue(userId);
        }

        function parseValue(value) {
            return value != undefined && value != null && value.toString().length > 0 ? value.toString() : null;
        }
        function parseValueToInt(value) {
            value = parseValue(value);
            if (value != null) return parseInt(value);

            return value;
        }
        function parseValueToDecimal(value) {
            value = parseValue(value);
            if (value != null) return parseFloat(value);

            return value;
        }

        $(window).on('message', function (evt) {
            var data = evt.originalEvent.data;

            if (data.target == "cloudbeds-booking-widget-iframe-size") {
                $('iframe').height(data.data);
                window.setTimeout(function () {
                    hideLoader();
                }, 500);
            }
            else if (data.target == "cloudbeds-booking-confirmation") {
                let bookingConfirmation = data.data;

                let hostelReservationRooms = [];
                $(bookingConfirmation.resRooms).each(function (i, v) {
                    hostelReservationRooms.push(new HostelReservationRoom(v.room_type_name, v.total, v.nights, v.start_date, v.end_date, v.guest_first_name, v.guest_last_name, v.guest_id))
                });

                postHostelBooking(new HostelReservation(bookingConfirmation.checkin_date, bookingConfirmation.checkout_date, bookingConfirmation.booking_total, bookingConfirmation.currency_code, bookingConfirmation.booking_id, bookingConfirmation.widget_property, hostelReservationRooms, $('#HostelId').val(), $('#UserId').val()));
            }
        });</script>
}

@section Styles {
    <style type="text/css">
        .header-banner-image-background {
            min-height: 300px;
        }
    </style>

}